@page "/forgotpw"
@layout LoginLayout
@using FiapHackaton.WebApp.Contracts.Interface
@using FiapHackaton.WebApp.DTO
@using FiapHackaton.WebApp.Models
@using FiapHackaton.WebApp.Services
@using Newtonsoft.Json

@inject NavigationManager _navMan
@inject IHttpClientFactory ClientFactory
@inject LocalStorageService _localStorage

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<section class="h-100">
    <div class="container h-100">
        <div class="row justify-content-sm-center h-100">
            <div class="col-xxl-4 col-xl-5 col-lg-5 col-md-7 col-sm-9">
                <div class="text-center my-5">
                    @if (isSent == true)
                    {
                        <div class="alert" alert-danger>
                            <div class="alert alert-dismissible alert-Success">
                                <h5>
                                    <span class="oi oi-circle-x"></span>
                                    Your password has been sent to the provided email address. Please check your email for further instructions.
                                </h5>
                            </div>

                        </div>
                    }
                    <div class="card shadow-lg">
                    <div class="card-body p-5">

                        <h1 class="fs-4 card-title fw-bold mb-4">Forgot Password</h1>
                        <div class="text-center my-5">
                           
                        </div>
                        <EditForm Model="userDto" OnValidSubmit="HandleRegistration" FormName="loginForm">



                            <div class="mb-3 form-group">
                                <label class="mb-2 text-muted" for="email">E-Mail Address</label>
                                <InputText class="form-control" type="email" id="Email" @bind-Value="userDto!.Email" placeholder="Email" required />
                            </div>

                            <div class="align-items-center d-flex">
                                <button type="submit" class="btn btn-primary ms-auto">
                                    Submit Request
                                </button>

                            </div>
                        </EditForm>

                    </div>
                    <div class="card-footer py-3 border-0">
                        <div class="text-center">
                            Already have an account? <a href="/" class="text-dark">Login</a>
                            <br />
                            Don't have account? <a href="/registerDoctor" class="text-dark">Create Doctor Account</a>
                            <br />
                            Don't have account? <a href="/registerPatient" class="text-dark">Create Patient Account</a>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    </div>
    
</section>

@code {

    bool isSent = false;
    [SupplyParameterFromForm]
    public ForgotPasswordDTO? userDto { get; set; }
    protected override void OnInitialized() => userDto ??= new();
    protected async Task HandleRegistration()
    {
        //var response = await _authRepo.Login(userDto);
        var clientlocal = ClientFactory.CreateClient("LocalApi");
        var response = await clientlocal.PostAsJsonAsync("api/UserProfile/forgot-password", new { Email = userDto.Email });

        if (response.IsSuccessStatusCode)
        {
            isSent = true;
        }
        else
        {
            // Handle error cases
            isSent = false;
            var errorContent = await response.Content.ReadAsStringAsync();
            // Log or display the error message as needed
        }
    }
}